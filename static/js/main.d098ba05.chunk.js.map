{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","qr","size","color","data","error","this","url","setState","window","open","e","target","value","className","style","paddingTop","backgroundColor","placeholder","onChange","changeData","bind","class","minWidth","href","role","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","changeSize","changeColor","getQR","textAlign","src","openTab","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d098ba05.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport { saveAs } from 'file-saver';\n\n\nclass App extends Component {\n\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tqr:null,\n\n\t\t\tsize:'250x250',\n\t\t\tcolor:'0-0-0',\n\t\t\tdata:'',\n\n\t\t\terror:'',\n\t\t}\n\t}\n\n\n\tgetQR() {\n\t\tif(!this.state.data){\n\t\t\tthis.setState({error:'A Link is Required'})\n\t\t\treturn\n\t\t}\n\n\t\tlet size = this.state.size\n\t\tlet data = this.state.data\n\t\tlet color = this.state.color\n\t\tlet format = \"png\"\n\n\t\t//DOCS: http://goqr.me/api/doc/create-qr-code/#param_format\n\t\tlet url = `http://api.qrserver.com/v1/create-qr-code/?data=${data}&size=${size}&format=${format}&color=${color}`\n\n\t\tthis.setState({qr:url})\n\t}\n\n\n\n\n\n\n\topenTab() {\n\t\tlet size = this.state.size\n\t\tlet data = this.state.data\n\t\tlet color = this.state.color\n\t\tlet format = \"png\"\n\n\t\twindow.open(`http://api.qrserver.com/v1/create-qr-code/?data=${data}&size=${size}&format=${format}&color=${color}`)\n\t}\n\n\n\n\n\t// download() {\n\t// \tlet download = document.createElement('a');\n\n\t// \tlet size = this.state.size\n\t// \tlet data = this.state.data\n\t// \tlet color = this.state.color\n\t// \tlet format = \"png\"\n\n\t// \t//DOCS: http://goqr.me/api/doc/create-qr-code/#param_format\n\n\t// \tdownload.href = `http://api.qrserver.com/v1/create-qr-code/?data=${data}&size=${size}&format=${format}&color=${color}`\n\t// \tdownload.download = 'download.png';\n\t// \tdownload.click();\n\t// }\n\n\n\n\t// testDownload(){\n\t// \tfetch('https://jsonplaceholder.typicode.com/todos/1')\n\t// \t  .then(resp => resp.blob())\n\t// \t  .then(blob => {\n\t// \t    const url = window.URL.createObjectURL(blob);\n\t// \t    const a = document.createElement('a');\n\t// \t    a.style.display = 'none';\n\t// \t    a.href = url;\n\t// \t    // the filename you want\n\t// \t    a.download = 'todo-1.json';\n\t// \t    document.body.appendChild(a);\n\t// \t    a.click();\n\t// \t    window.URL.revokeObjectURL(url);\n\t// \t    alert('your file has downloaded!'); // or you know, something with better UX...\n\t// \t  })\n\t// \t  .catch(() => alert('oh no!'));\n\t// }\n\n\n\n\tchangeData(e){\n\t\tthis.setState({data:e.target.value})\n\t}\n\n\tchangeSize(value){\n\t\tthis.setState({size:value})\n\t}\n\n\tchangeColor(value){\n\t\tthis.setState({color:value})\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\n\t\t\t<br/>\n\n\n\t\t\t<div className='row'>\n\t\t\t\t<div style={{paddingTop:'4px', backgroundColor:'black', color:'white'}} className='col-12'>\n\t\t\t\t\t<h2>QR CODE GENERATOR</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='col-sm-6'>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\n\t\t\t\t\t<p>Paste a Link (Up to 900 Characters)</p>\n\t\t\t\t\t<input placeholder='Required' className='form-control' onChange={this.changeData.bind(this)}/>\n\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\n\t\t\t\t\t<p>Size (In Pixels)</p>\n\t\t\t\t\t<div class=\"dropdown show\">\n\t\t\t\t\t\t<a  style={{minWidth:'200px'}} class=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t{this.state.size}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div style={{minWidth:'200px'}} class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n\t\t\t\t\t\t\t<a onClick={()=>this.changeSize('250x250')} class=\"dropdown-item\" href=\"#\">250x250</a>\n\t\t\t\t\t\t\t<a onClick={()=>this.changeSize('500x500')} class=\"dropdown-item\" href=\"#\">500x500</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t\n\t\t\t\t\t<p>Color</p>\n\t\t\t\t\t<div class=\"dropdown show\">\n\t\t\t\t\t\t<a style={{minWidth:'200px'}} class=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t{this.state.color}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div style={{minWidth:'200px'}} class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n\t\t\t\t\t\t\t<a onClick={()=>this.changeColor('0-0-0')} class=\"dropdown-item\" href=\"#\">(Black) 0-0-0</a>\n\t\t\t\t\t\t\t<a onClick={()=>this.changeColor('255-0-0')} class=\"dropdown-item\" href=\"#\">(Red) 255-0-0</a>\n\t\t\t\t\t\t\t<a onClick={()=>this.changeColor('0-0-255')} class=\"dropdown-item\" href=\"#\">(Blue) 0-0-255</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<button className='btn btn-lg btn-block btn-primary' onClick={this.getQR.bind(this)}>GENERATE MY QR !</button>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<p style={{color:'red'}}>{this.state.error}</p>\n\t\t\t\t\t<br/>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div style={{textAlign:'center'}} className='col-sm-6'>\n\t\t\t\t\t<br/>\n\t\t\t\t\t{this.state.qr &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={this.state.qr} />\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<button className='btn btn-secondary' onClick={this.openTab.bind(this)}>Open in Separate Tab</button>\n\t\t\t\t\t\t<p>( Test with Camera App )</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}